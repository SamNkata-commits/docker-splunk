#   ########################################################################
#   Copyright 2021 Splunk Inc.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#   ########################################################################

name: ci-main
on:
  push:
    branches:
      - "main"
      - "develop"
  pull_request:
    branches:
      - "main"
      - "develop"
jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      container_tags: ${{ steps.docker_action_meta.outputs.tags }}
      container_labels: ${{ steps.docker_action_meta.outputs.labels }}
      container_buildtime: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.created'] }}
      container_version: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.version'] }}
      container_revision: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.revision'] }}
      container_base: ${{ fromJSON(steps.docker_action_meta.outputs.json).tags[0] }}
      matrix_supportedSplunk: ${{ steps.matrix.outputs.supportedSplunk }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: false
          persist-credentials: false
      - name: Semantic Release
        id: version
        uses: cycjimmy/semantic-release-action@v2.5.4
        with:
          semantic_version: 17
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/git
            semantic-release-helm
            @google/semantic-release-replace-plugin
          dry_run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: docker_action_meta
        uses: docker/metadata-action@v3.5.0
        with:
          images: ghcr.io/${{ github.repository }}/container
          tags: |
            type=sha,format=long,suffix=-base
            type=sha,suffix=-base
            type=semver,suffix=-base,pattern={{version}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,suffix=-base,pattern={{major}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,suffix=-base,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.new_release_version }}
            type=ref,suffix=-base,event=branch
            type=ref,suffix=-base,event=pr
            type=ref,suffix=-base,event=tag
      - name: matrix
        id: matrix
        uses: splunk/addonfactory-test-matrix-action@v1

  # security:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/node@master
  #       continue-on-error: true
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  base_build_action:
    runs-on: ubuntu-latest
    name: Base Build Action
    needs:
      - meta
    steps:
      # To use this repository's private action,
      # you must check out the repository
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: false
          persist-credentials: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: params
        id: dotenv
        uses: falti/dotenv-action@v0.2.7
      - name: Build and push action
        id: docker_action_build
        uses: docker/build-push-action@v2.6.1
        with:
          context: ./base/redhat-8/
          file: base/redhat-8/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/s390x
          push: true
          tags: ${{ needs.meta.outputs.container_base }}
          labels: ${{ needs.meta.outputs.container_labels }}
          build-args: |
            SCLOUD_URL=${{ steps.dotenv.outputs.SCLOUD_URL }}
            BUILDTIME=${{ needs.meta.outputs.container_buildtime }}
            VERSION=${{ needs.meta.outputs.container_version }}
            REVISION=${{ needs.meta.outputs.container_revision }}
          cache-from: type=registry,ref=${{ needs.meta.outputs.container_base }}
          cache-to: type=inline

      - name: Run Snyk to check Docker image for vulnerabilities
        # Snyk can be used to break the build when it detects vulnerabilities.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{needs.meta.outputs.sc4s}}
          args: --file=package/Dockerfile
  splunk_build_action:
    runs-on: ubuntu-latest
    name: Base Build Action
    needs:
      - meta
      - base_build_action
    strategy:
      fail-fast: false
      matrix:
        splunk: ${{ fromJson(needs.meta.outputs.matrix_supportedSplunk) }}
    steps:
      # To use this repository's private action,
      # you must check out the repository
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: false
          persist-credentials: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: params
        id: dotenv
        uses: falti/dotenv-action@v0.2.7
      - name: Get Ansible
        run: make ansible
      - name: Docker meta
        id: docker_action_meta
        uses: docker/metadata-action@v3.5.0
        with:
          images: ghcr.io/${{ github.repository }}/container
          tags: |
            type=sha,format=long,suffix=-splunk-${{ matrix.splunk.version }}
            type=sha,suffix=-splunk-${{ matrix.splunk.version }}
            type=semver,suffix=-splunk-${{ matrix.splunk.version }},pattern={{version}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,suffix=-splunk-${{ matrix.splunk.version }},pattern={{major}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,suffix=-splunk-${{ matrix.splunk.version }},pattern={{major}}.{{minor}},value=${{ steps.version.outputs.new_release_version }}
            type=ref,suffix=-splunk-${{ matrix.splunk.version }},event=branch
            type=ref,suffix=-splunk-${{ matrix.splunk.version }},event=pr
            type=ref,suffix=-splunk-${{ matrix.splunk.version }},event=tag
      - name: Build and push action
        id: docker_action_build
        uses: docker/build-push-action@v2.6.1
        with:
          context: .
          file: splunk/common-files/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ fromJSON(steps.docker_action_meta.outputs.json).tags[0] }}
          labels: ${{ steps.docker_action_meta.outputs.container_labels }}
          build-args: |
            SPLUNK_BASE_IMAGE=${{ needs.meta.outputs.container_base }}
            SPLUNK_VERSION=${{ matrix.splunk.version }}
            SPLUNK_BUILD=${{ matrix.splunk.build }}
            BUILDTIME=${{ needs.meta.outputs.container_buildtime }}
            VERSION=${{ needs.meta.outputs.container_version }}
            REVISION=${{ needs.meta.outputs.container_revision }}
          cache-from: type=registry,ref=${{ fromJSON(steps.docker_action_meta.outputs.json).tags[0] }}
          cache-to: type=inline
      - name: Run Snyk to check Docker image for vulnerabilities
        # Snyk can be used to break the build when it detects vulnerabilities.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{needs.meta.outputs.sc4s}}
          args: --file=package/Dockerfile
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ fromJSON(steps.docker_action_meta.outputs.json).tags[0] }}"
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: "trivy-results.sarif"
      - name: Scan image
        uses: anchore/scan-action@v2
        with:
          image: "${{ fromJSON(steps.docker_action_meta.outputs.json).tags[0] }}"

  splunkforwarder_build_action:
    runs-on: ubuntu-latest
    name: Base Build Action
    needs:
      - meta
      - base_build_action
    strategy:
      fail-fast: false
      matrix:
        splunk: ${{ fromJson(needs.meta.outputs.matrix_supportedSplunk) }}
    steps:
      # To use this repository's private action,
      # you must check out the repository
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: false
          persist-credentials: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: params
        id: dotenv
        uses: falti/dotenv-action@v0.2.7
      - name: Get Ansible
        run: make ansible
      - name: Docker meta
        id: docker_action_meta
        uses: docker/metadata-action@v3.5.0
        with:
          images: ghcr.io/${{ github.repository }}/container
          tags: |
            type=sha,format=long,suffix=-splunkforwarder-${{ matrix.splunk.version }}
            type=sha,suffix=-splunkforwarder-${{ matrix.splunk.version }}
            type=semver,suffix=-splunkforwarder-${{ matrix.splunk.version }},pattern={{version}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,suffix=-splunkforwarder-${{ matrix.splunk.version }},pattern={{major}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,suffix=-splunkforwarder-${{ matrix.splunk.version }},pattern={{major}}.{{minor}},value=${{ steps.version.outputs.new_release_version }}
            type=ref,suffix=-splunkforwarder-${{ matrix.splunk.version }},event=branch
            type=ref,suffix=-splunkforwarder-${{ matrix.splunk.version }},event=pr
            type=ref,suffix=-splunkforwarder-${{ matrix.splunk.version }},event=tag
      - name: Build and push action
        id: docker_action_build
        uses: docker/build-push-action@v2.6.1
        with:
          context: .
          file: uf/common-files/Dockerfile
          platforms: linux/amd64,linux/s390x
          push: true
          tags: ${{ fromJSON(steps.docker_action_meta.outputs.json).tags[0] }}
          labels: ${{ steps.docker_action_meta.outputs.container_labels }}
          build-args: |
            SPLUNK_BASE_IMAGE=${{ needs.meta.outputs.container_base }}
            SPLUNK_VERSION=${{ matrix.splunk.version }}
            SPLUNK_BUILD=${{ matrix.splunk.build }}
            BUILDTIME=${{ needs.meta.outputs.container_buildtime }}
            VERSION=${{ needs.meta.outputs.container_version }}
            REVISION=${{ needs.meta.outputs.container_revision }}
          cache-from: type=registry,ref=${{ fromJSON(steps.docker_action_meta.outputs.json).tags[0] }}
          cache-to: type=inline
      - name: Run Snyk to check Docker image for vulnerabilities
        # Snyk can be used to break the build when it detects vulnerabilities.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{needs.meta.outputs.sc4s}}
          args: --file=package/Dockerfile
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ fromJSON(steps.docker_action_meta.outputs.json).tags[0] }}"
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: "trivy-results.sarif"
      - name: Scan image
        uses: anchore/scan-action@v2
        with:
          image: "${{ fromJSON(steps.docker_action_meta.outputs.json).tags[0] }}"

  test-container:
    runs-on: ubuntu-latest
    needs:
      - meta
      - splunk_build_action
      - splunkforwarder_build_action
    strategy:
      fail-fast: false
      matrix:
        splunk: ${{ fromJson(needs.meta.outputs.matrix_supportedSplunk) }}
        size:
          - small
          - large
    # runs all of the steps inside the specified container rather than on the VM host.
    # Because of this the network configuration changes from host based network to a container network.
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: false
          persist-credentials: false
      - uses: actions/setup-python@v2
        with:
          python-version: "3.7.8"
      - uses: actions/setup-python@v2
        with:
          python-version: "2.7.18"
      - name: Docker meta
        id: docker_action_meta_splunk
        uses: docker/metadata-action@v3.5.0
        with:
          images: ghcr.io/${{ github.repository }}/container
          tags: |
            type=sha,format=long,suffix=-splunk-${{ matrix.splunk.version }}
            type=sha,suffix=-splunk-${{ matrix.splunk.version }}
            type=semver,suffix=-splunk-${{ matrix.splunk.version }},pattern={{version}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,suffix=-splunk-${{ matrix.splunk.version }},pattern={{major}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,suffix=-splunk-${{ matrix.splunk.version }},pattern={{major}}.{{minor}},value=${{ steps.version.outputs.new_release_version }}
            type=ref,suffix=-splunk-${{ matrix.splunk.version }},event=branch
            type=ref,suffix=-splunk-${{ matrix.splunk.version }},event=pr
            type=ref,suffix=-splunk-${{ matrix.splunk.version }},event=tag
      - name: Docker meta
        id: docker_action_meta_splunkforwarder
        uses: docker/metadata-action@v3.5.0
        with:
          images: ghcr.io/${{ github.repository }}/container
          tags: |
            type=sha,format=long,suffix=-splunkforwarder-${{ matrix.splunk.version }}
            type=sha,suffix=-splunkforwarder-${{ matrix.splunk.version }}
            type=semver,suffix=-splunkforwarder-${{ matrix.splunk.version }},pattern={{version}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,suffix=-splunkforwarder-${{ matrix.splunk.version }},pattern={{major}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,suffix=-splunkforwarder-${{ matrix.splunk.version }},pattern={{major}}.{{minor}},value=${{ steps.version.outputs.new_release_version }}
            type=ref,suffix=-splunkforwarder-${{ matrix.splunk.version }},event=branch
            type=ref,suffix=-splunkforwarder-${{ matrix.splunk.version }},event=pr
            type=ref,suffix=-splunkforwarder-${{ matrix.splunk.version }},event=tag
      - run: |
          docker pull ${{ fromJSON(steps.docker_action_meta_splunk.outputs.json).tags[0] }}
          docker tag ${{ fromJSON(steps.docker_action_meta_splunk.outputs.json).tags[0] }} splunk-redhat-8:latest
          docker pull ${{ fromJSON(steps.docker_action_meta_splunkforwarder.outputs.json).tags[0] }}
          docker tag ${{ fromJSON(steps.docker_action_meta_splunkforwarder.outputs.json).tags[0] }} uf-redhat-8:latest
      - run: |
          make test_setup
      - run: |
          make run_${{ matrix.size }}_tests_redhat8
  # mike:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.ref == 'refs/heads/main' }} || ${{ github.ref == 'refs/heads/develop' }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - uses: oleksiyrudenko/gha-git-credentials@v2-latest
  #       with:
  #         token: "${{ secrets.GITHUB_TOKEN }}"
  #     - name: Upload
  #       run: |
  #         BRANCH=$(echo $GITHUB_REF | cut -d / -f 3)
  #         echo $BRANCH
  #         pip3 install poetry
  #         poetry install
  #         poetry run mike deploy -p $BRANCH
  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   needs:
  #     - meta
  #     - build_action
  #     - test-container
  #     - mike
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: false
  #         persist-credentials: false
  #     - name: Semantic Release
  #       id: version
  #       uses: cycjimmy/semantic-release-action@v2.5.4
  #       with:
  #         semantic_version: 17
  #         extra_plugins: |
  #           @semantic-release/exec
  #           @semantic-release/git
  #           semantic-release-helm
  #           @google/semantic-release-replace-plugin
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GHCR_PAT }}
